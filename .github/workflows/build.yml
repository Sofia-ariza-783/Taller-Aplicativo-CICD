name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

env:
  MAVEN_OPTS: -Dmaven.repo.local=~/.m2/repository

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build & Unit Tests
        run: mvn clean package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/*.jar
            target/surefire-reports/*
            target/site/jacoco/*

      - name: Check Code Format
        run: mvn spotless:check

  code-analysis:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Generate JaCoCo report
        run: mvn jacoco:report -Djacoco.destFile=target/jacoco.exec

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=Genesis-SIRHA_squad-genesis-backend-2025-2 \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.jacoco.reportPaths=target/jacoco.exec \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.analysis.ci.autoconfig.disabled=true
  

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test, code-analysis]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sirha-genesis'
          slot-name: 'Production'
          package: 'target/*.jar'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}